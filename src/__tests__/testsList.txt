PASS src/__tests__/usePolling.test.ts
  Хук usePolling:
    С параметрами по умолчанию:
      ✓ должен устанавливать и очищать таймер (7 ms)
      ✓ должен вызывать переданную функцию с частотой - 60 секунд (47 ms)
    С параметром (condition = false):
      ✓ не должен устанавливать и очищать таймер (2 ms)
      ✓ не должен вызывать переданную функцию (1 ms)
    С переключением параметра condition в жизненном цикле хука:
      ✓ должен устанавливать и очищать таймер при каждом переключении (2 ms)
      ✓ если (condition = true) должен вызывать переданную функцию с частотой - 60 секунд (47 ms)
    Параметр pollingInterval должен задавать промежуток времени между вызовами в миллисекундах:
      ✓ должен вызывать переданную функцию с частотой - 100 миллисекунд (55 ms)
      ✓ не должен меняться при ререндерах (114 ms)
    Должен подписываться на событие скрытия приложения и отписываться от него:
      ✓ при монтировании и размонтировании (1 ms)
      ✓ при смене аргумента condition (2 ms)

PASS src/__tests__/shareVkPost.test.ts
  Функция shareVkPost
    ✓ Вызывается VK Bridge, метод VKWebAppShowWallPostBox, передаются параметры шеринга (1 ms)
    Произошла ошибка
      ✓ Ошибка от ВК, не является отказом пользователя. Тип ошибки: client_error
      ✓ Ошибка от ВК, не является отказом пользователя. Тип ошибки: api_error
      ✓ Ошибка от ВК, не является отказом пользователя. Тип ошибки: auth_error
      ✓ Ошибка от ВК, отказ пользователя (1 ms)
  Функция shareVkPostWithUpload
    Этап получения сервера для загрузки фото
      ✓ Вызывается метод VK API photos.getWallUploadServer (6 ms)
      ✓ В callVkApi передаётся токен, параметры получения токена. В качестве колбэка на отказ от всех скоупов и отказ от части скоупов передаётся функция-аргумент onUserDeniedAccess (1 ms)
      Утилита callVkApi возвращает ошибку типа client_error
        ✓ Ошибка возвращается из функции и передаётсяв функцию-аргумент onErrorOccurred (1 ms)
        ✓ Выполнение не доходит до обращения к бэкенду KTS, методу photos.saveWallPhoto и методу VKWebAppShowWallPostBox (1 ms)
      Утилита callVkApi возвращает ошибку типа auth_error
        ✓ Ошибка возвращается из функции и передаётсяв функцию-аргумент onErrorOccurred
        ✓ Выполнение не доходит до обращения к бэкенду KTS, методу photos.saveWallPhoto и методу VKWebAppShowWallPostBox
      Утилита callVkApi возвращает ошибку типа api_error
        ✓ Ошибка возвращается из функции и передаётсяв функцию-аргумент onErrorOccurred (1 ms)
        ✓ Выполнение не доходит до обращения к бэкенду KTS, методу photos.saveWallPhoto и методу VKWebAppShowWallPostBox
    Этап отправки адреса ВК-сервера на бэкенд KTS для загрузки. Все предыдущие этапы выполнены успешно
      ✓ Используется утилита api из mediaproject-utils. В утилиту передаются эндпоинт API KTS, файл, адрес ВК-сервера, флаг об использовании FormData (1 ms)
      Ответ бэкенда KTS, считающийся ошибкой
        Ответ пустой
          ✓ Данные об ошибке передаются в функцию-аргумент onErrorOccurred, а результатом выполнения утилиты является undefined (1 ms)
          ✓ Выполнение не доходит до обращения к методу photos.saveWallPhoto и методу VKWebAppShowWallPostBox (1 ms)
        Вернулась явная ошибка
          ✓ Данные об ошибке передаются в функцию-аргумент onErrorOccurred, а результатом выполнения утилиты является undefined
          ✓ Выполнение не доходит до обращения к методу photos.saveWallPhoto и методу VKWebAppShowWallPostBox (2 ms)
    Этап сохранения картинки в альбом стены пользователя. Все предыдущие этапы выполнены успешно
      ✓ Вызывается VK API с методом photos.saveWallPhoto. В VK API передаются данные для загрузки картинки, полученные ранее из KTS API поле server приводится к числу
      В VK API передаётся токен доступа
        ✓ Если токен уже был передан, используется он (1 ms)
        ✎ todo Если изначально передан протухший токен, используется обновлённый токен
      Ответ VK API, считающийся ошибкой
        Вернулась ошибка из VK API. Тип ошибки: client_error
          ✓ Ответ VK API попадает в функцию-аргумент onErrorOccurred, утилита возвращает undefined
          ✓ Выполнение не доходит до обращения к методу VKWebAppShowWallPostBox (1 ms)
        Вернулась ошибка из VK API. Тип ошибки: api_error
          ✓ Ответ VK API попадает в функцию-аргумент onErrorOccurred, утилита возвращает undefined (1 ms)
          ✓ Выполнение не доходит до обращения к методу VKWebAppShowWallPostBox
        Вернулась ошибка из VK API. Тип ошибки: auth_error
          ✓ Ответ VK API попадает в функцию-аргумент onErrorOccurred, утилита возвращает undefined (1 ms)
          ✓ Выполнение не доходит до обращения к методу VKWebAppShowWallPostBox
        Вернулась пустота в ответе в поле response
          ✓ Ответ VK API попадает в функцию-аргумент onErrorOccurred, утилита возвращает undefined (1 ms)
          ✓ Выполнение не доходит до обращения к методу VKWebAppShowWallPostBox
        Вернулся пустой массив с данными о загруженных картинках
          ✓ Ответ VK API попадает в функцию-аргумент onErrorOccurred, утилита возвращает undefined (1 ms)
          ✓ Выполнение не доходит до обращения к методу VKWebAppShowWallPostBox
    Этап шеринга картинки в пост. Все предыдущие этапы выполнены успешно
      ✓ Переданные изначально параметры шеринга (кроме attachments) передаются в метод VKWebAppShowWallPostBox (1 ms)
      ✓ Картинка со стены добавляется к переданным attachments, отправляемым в shareVkPost
      ✓ Если дополнительные attachments не переданы, в параметр attachments shareVkPost передаётся только картинка со стены пользователя (1 ms)
      Из функции возвращается результат выполнения VK Bridge с методом VKWebAppShowWallPostBox
        ✓ Успешный результат
        Произошла ошибка
          ✓ Ошибка от ВК, не является отказом пользователя. Ошибка возвращается как результат выполнения утилиты. Тип ошибки: client_error (1 ms)
          ✓ Ошибка от ВК, не является отказом пользователя. Ошибка возвращается как результат выполнения утилиты. Тип ошибки: api_error
          ✓ Ошибка от ВК, не является отказом пользователя. Ошибка возвращается как результат выполнения утилиты. Тип ошибки: auth_error (1 ms)
          ✓ Ошибка от ВК, отказ пользователя (1 ms)
    Обработка ошибки, необработанной на каком-либо этапе
      ✓ Выброс ошибки, не связанной с отказом пользователя (1 ms)
      ✓ Выброс ошибки, связанной с отказом пользователя

PASS src/__tests__/useEventSubscribe.test.ts
  Хук useEventSubscribe
    ✓ Происходит подписка и отписка при монтировании и размонтировании соответственно (5 ms)
    ✓ Происходит подписка и отписка при изменении аргумента с зависимостями (1 ms)

PASS src/__tests__/getVkAccessToken.test.ts
  Функция parseVkScopes
    ✓ Правильный парсинг скоупов, количество скоупов: 0 (1 ms)
    ✓ Правильный парсинг скоупов, количество скоупов: 1 (1 ms)
    ✓ Правильный парсинг скоупов, количество скоупов: 7
    ✓ Правильный парсинг скоупов, количество скоупов: 12 (1 ms)
    ✓ Неправильный разделитель строк: ", "
    ✓ Неправильный разделитель строк: " ,"
    ✓ Неправильный разделитель строк: " "
    ✓ Неправильный разделитель строк: ";"
    ✓ Случайная строка
    ✓ Строка с разделёнными запятыми случайными строками
  Функция checkOneScopesSetIncludesAnother
    ✓ Правильное сравнение одинаковых наборов скоупов, количество скоупов: 0
    ✓ Правильное сравнение одинаковых наборов скоупов, количество скоупов: 1
    ✓ Правильное сравнение одинаковых наборов скоупов, количество скоупов: 5
    ✓ Правильное сравнение одинаковых наборов скоупов, количество скоупов: 12
    ✓ Один скоуп является подмножеством другого (1 ms)
    ✓ Полностью несовпадающие наборы скоупов
    ✓ Первый набор скоупов пустой
    ✓ Второй набор скоупов пустой
  Функция getNewVkAccessToken
    ✓ Получение токена по переданным скоупам, количество скоупов: 0
    ✓ Получение токена по переданным скоупам, количество скоупов: 1
    ✓ Получение токена по переданным скоупам, количество скоупов: 8 (1 ms)
    ✓ Получение токена по переданным скоупам, количество скоупов: 12
    ✓ В бридж передаётся строка со скоупами, переданными в массиве в аргументе
    ✓ В бридж передаётся строка со скоупами, переданными в массиве в аргументе
    ✓ В бридж передаётся строка со скоупами, переданными в массиве в аргументе
    ✓ В бридж передаётся строка со скоупами, переданными в массиве в аргументе (1 ms)
    ✓ Ошибка возвращается
    ✓ В бридж передаётся id приложения
    ✓ Бридж вызывает метод для получения токена
  Функция getVkAccessToken
    ✓ Успешный запрос за токеном при отсутствии доступных токена и скоупов (поля в window равны undefined). Количество запрашиваемых скоупов: 0 (1 ms)
    ✓ Успешный запрос за токеном при отсутствии доступных токена и скоупов (поля в window равны undefined). Количество запрашиваемых скоупов: 1
    ✓ Успешный запрос за токеном при отсутствии доступных токена и скоупов (поля в window равны undefined). Количество запрашиваемых скоупов: 7
    ✓ Успешный запрос за токеном при отсутствии доступных токена и скоупов (поля в window равны undefined). Количество запрашиваемых скоупов: 12
    ✓ Успешный запрос. Множество имеющихся скоупов полностью не совпадает с множеством запрашиваемых скоупов или множество имеющихся скоупов является подмножеством запрашиваемых. Имеющиеся скоупы: stats. Запрашиваемые скоупы: docs
    ✓ Успешный запрос. Множество имеющихся скоупов полностью не совпадает с множеством запрашиваемых скоупов или множество имеющихся скоупов является подмножеством запрашиваемых. Имеющиеся скоупы: docs,groups,video. Запрашиваемые скоупы: status
    ✓ Успешный запрос. Множество имеющихся скоупов полностью не совпадает с множеством запрашиваемых скоупов или множество имеющихся скоупов является подмножеством запрашиваемых. Имеющиеся скоупы: docs. Запрашиваемые скоупы: status,groups,stories (1 ms)
    ✓ Успешный запрос. Множество имеющихся скоупов полностью не совпадает с множеством запрашиваемых скоупов или множество имеющихся скоупов является подмножеством запрашиваемых. Имеющиеся скоупы: docs. Запрашиваемые скоупы: stats,docs
    ✓ Успешный запрос. Множество имеющихся скоупов полностью не совпадает с множеством запрашиваемых скоупов или множество имеющихся скоупов является подмножеством запрашиваемых. Имеющиеся скоупы: docs,groups. Запрашиваемые скоупы: stats,docs,groups
    ✓ Успешный запрос. Множество имеющихся скоупов полностью не совпадает с множеством запрашиваемых скоупов или множество имеющихся скоупов является подмножеством запрашиваемых. Имеющиеся скоупы: groups,market. Запрашиваемые скоупы: stats,docs,groups,market (2 ms)
    ✓ Успешный запрос. Множество запрашиваемых скоупов является подмножеством имеющихся скоупов. Имеющиеся скоупы: stats,docs. Запрашиваемые скоупы: docs
    ✓ Успешный запрос. Множество запрашиваемых скоупов является подмножеством имеющихся скоупов. Имеющиеся скоупы: stats,docs,groups. Запрашиваемые скоупы: docs,groups
    ✓ Успешный запрос. Множество запрашиваемых скоупов является подмножеством имеющихся скоупов. Имеющиеся скоупы: stats,docs,groups,market. Запрашиваемые скоупы: groups,market
    ✓ Успешный запрос. Множество запрашиваемых скоупов является подмножеством имеющихся скоупов. Имеющиеся скоупы: stats,docs,groups,market. Запрашиваемые скоупы: stats,docs,groups,market (1 ms)
    ✓ Запрашивается пустое множество скоупов при уже имеющемся множестве скоупов. Количество доступных скоупов: 0
    ✓ Запрашивается пустое множество скоупов при уже имеющемся множестве скоупов. Количество доступных скоупов: 1
    ✓ Запрашивается пустое множество скоупов при уже имеющемся множестве скоупов. Количество доступных скоупов: 3
    ✓ Запрашивается пустое множество скоупов при уже имеющемся множестве скоупов. Количество доступных скоупов: 12
    ✓ Запрашивается множество скоупов при уже имеющемся пустом множестве скоупов. Количество запрашиваемых скоупов: 0
    ✓ Запрашивается множество скоупов при уже имеющемся пустом множестве скоупов. Количество запрашиваемых скоупов: 1
    ✓ Запрашивается множество скоупов при уже имеющемся пустом множестве скоупов. Количество запрашиваемых скоупов: 10
    ✓ Запрашивается множество скоупов при уже имеющемся пустом множестве скоупов. Количество запрашиваемых скоупов: 12
    ✓ Отказ от всех скоупов (множество запрашиваемых не является подмножеством имеющихся) Имеющийся: stats. Запрашиваемый: docs
    ✓ Отказ от всех скоупов (множество запрашиваемых не является подмножеством имеющихся) Имеющийся: docs,groups,video. Запрашиваемый: status
    ✓ Отказ от всех скоупов (множество запрашиваемых не является подмножеством имеющихся) Имеющийся: docs. Запрашиваемый: status,groups,stories (1 ms)
    ✓ Отказ от одного или нескольких скоупов. Запрашиваемые: docs,friends,status. Разрешаемые: docs
    ✓ Отказ от одного или нескольких скоупов. Запрашиваемые: docs,friends,status. Разрешаемые: docs,friends
    ✓ Неизвестная ошибка

PASS src/__tests__/callVkApi.test.ts
  Функция callVkApi
    ✓ Успешный запрос с изначально корректным токеном (1 ms)
    ✓ Некоторая ошибка (в том числе из-за возможно некорректного токена)
    ✓ Успешный запрос, нет токена, токен должен быть получен один раз
    ✓ Некоторая ошибка (в том числе из-за возможного некорректного токена), нет токена, токен должен быть получен один раз (1 ms)
    ✓ Успешный запрос, изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token was given to another ip address., веб: true
    ✓ Успешный запрос, изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token has expired., веб: true
    ✓ Успешный запрос, изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token was given to another ip address., веб: false
    ✓ Успешный запрос, изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token has expired., веб: false
    ✓ Некоторая ошибка (в том числе из-за возможного некорректного токена) после получения нового токена. Изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token was given to another ip address., веб: true
    ✓ Некоторая ошибка (в том числе из-за возможного некорректного токена) после получения нового токена. Изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token has expired., веб: true
    ✓ Некоторая ошибка (в том числе из-за возможного некорректного токена) после получения нового токена. Изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token was given to another ip address., веб: false
    ✓ Некоторая ошибка (в том числе из-за возможного некорректного токена) после получения нового токена. Изначально протухший токен, новый токен должен быть получен один раз. Ошибка: User authorization failed: access_token has expired., веб: false
    ✓ Запрос с некоторым ответом, изначально протухший токен. Новый токен получать не нужно. Ошибка: User authorization failed: access_token was given to another ip address., веб: true
    ✓ Запрос с некоторым ответом, изначально протухший токен. Новый токен получать не нужно. Ошибка: User authorization failed: access_token has expired., веб: true
    ✓ Запрос с некоторым ответом, изначально протухший токен. Новый токен получать не нужно. Ошибка: User authorization failed: access_token was given to another ip address., веб: false
    ✓ Запрос с некоторым ответом, изначально протухший токен. Новый токен получать не нужно. Ошибка: User authorization failed: access_token has expired., веб: false
    ✓ Запрос, название метода передаётся в бридж (1 ms)
    ✓ Запрос, версия VK API передаётся в параметры
    ✓ Запрос, токена нет, параметры для получения токена передаются в getVkAccessToken, новый токен передаётся в бридж
    ✓ Запрос, токен передаётся в бридж
    ✓ Запрос, протухший токен передаётся в бридж, затем новый токен передаётся в бридж. Параметры получения токена передаются в getVkAccessToken (1 ms)
    ✓ Запрос, дополнительные параметры передаются в бридж

PASS src/__tests__/checkVkPlatform.test.ts
  Функция checkVkPlatform
    ✓ Десктопная версия сайта ВКонтакте (1 ms)
    ✓ Десктопная версия VK Мессенджера (сайт)
    ✓ Десктопное приложение VK Мессенджер (1 ms)
    ✓ Мобильное приложение ВКонтакте для Android
    ✓ Мобильное приложение VK Мессенджер для Android (1 ms)
    ✓ Мобильное приложение ВКонтакте для iPadOS
    ✓ Мобильное приложение ВКонтакте для iOS
    ✓ Мобильное приложение VK Мессенджер для iOS (1 ms)
    ✓ Мобильная версия сайта ВКонтакте, открытая в десктопном браузере (mvk)
    ✓ Мобильная версия сайта ВКонтакте, открытая в мобильном браузере на андроиде
    ✓ Мобильная версия сайта ВКонтакте, открытая в мобильном браузере на айфоне (1 ms)
    ✓ Мобильная версия сайта ВКонтакте, открытая в мобильном браузере на айпаде
    ✓ Мобильная версия сайта ВКонтакте, открытая в мобильном браузере на айподе
    ✓ Внешнее приложение для Android, на котором запущен миниапп
    ✓ Внешнее приложение для iOS, на котором запущен миниапп
    ✓ Внешнее приложение для iPadOS, на котором запущен миниапп (1 ms)
    ✓ Внешний сайт ВК, запущенный на десктопном браузере
    ✓ Cайт, открытый в мобильном браузере на десктопе (mvk)
    ✓ Cайт, открытый в мобильном браузере на андроиде (2 ms)
    ✓ Cайт, открытый в мобильном браузере на iPhone
    ✓ Cайт, открытый в мобильном браузере на iPad
    ✓ Cайт, открытый в мобильном браузере на iPod
    ✓ Непередача вк-платформы (1 ms)

PASS src/__tests__/setVkViewSettings.test.ts
  setVkViewSettings
    ✓ Платформа, не поддерживающая view settings: desktop_web (2 ms)
    ✓ Платформа, не поддерживающая view settings: desktop_web_messenger (1 ms)
    ✓ Платформа, не поддерживающая view settings: desktop_app_messenger
    ✓ Платформа, не поддерживающая view settings: mobile_web
    ✓ Платформа, не поддерживающая view settings: android_external
    ✓ Платформа, не поддерживающая view settings: iphone_external (1 ms)
    ✓ Платформа, не поддерживающая view settings: ipad_external
    ✓ Платформа, не поддерживающая view settings: web_external
    ✓ Платформа, не поддерживающая view settings: mvk_external
    ✓ Платформа, поддерживающая все view settings: mobile_android (1 ms)
    ✓ Платформа, поддерживающая view settings (только окраску статусбара): mobile_iphone
    ✓ Платформа, поддерживающая view settings (только окраску статусбара): mobile_ipad
    ✓ Неизвестная ошибка bridge.supports (1 ms)
    ✓ Неизвестная ошибка bridge.send

PASS src/__tests__/isVkError.test.ts
  Функция isVkError
    ✓ Примитив null
    ✓ Примитив undefined
    ✓ Примитив false
    ✓ Примитив true
    ✓ Примитив Symbol()
    ✓ Примитив Symbol(named symbol)
    ✓ Примитив 6058
    ✓ Примитив 5460 (1 ms)
    ✓ Примитив 9078
    ✓ Примитив 5851
    ✓ Примитив 816
    ✓ Примитив 2068
    ✓ Примитив R0CuinozCSemb6ymMwxRNb1w
    ✓ Примитив jRs7g3XJHFYjiHJR35EHXN6s (1 ms)
    ✓ Примитив VVxTA4ADEr4AhkupQsqnytgS
    ✓ Функция стрелочная
    ✓ Функция не стрелочная
    ✓ Пустой объект
    ✓ Объект произвольной структуры
    ✓ Объект ошибки Error
    ✓ Попытка обмана проверки: объект с error_type, равным "client_error", но с отсутствующим error_data
    ✓ Попытка обмана проверки: объект с error_type, равным "api_error", но с отсутствующим error_data
    ✓ Попытка обмана проверки: объект с error_type, равным "auth_error", но с отсутствующим error_data (1 ms)
    ✓ Попытка обмана проверки: объект с error_type, равным "client_error", с произвольным request_id, но с отсутствующим error_data
    ✓ Попытка обмана проверки: объект с error_type, равным "api_error", с произвольным request_id, но с отсутствующим error_data
    ✓ Попытка обмана проверки: объект с error_type, равным "auth_error", с произвольным request_id, но с отсутствующим error_data
    ✓ Попытка обмана проверки: объект с произвольным значением поля error_data, но отсутствующим error_type
    ✓ Попытка обмана проверки: объект с произвольным значением поля error_data и неправильным error_type
    ✓ Объект с произвольным error_data и error_type, равным "client_error"
    ✓ Объект с произвольным error_data и error_type, равным "api_error"
    ✓ Объект с произвольным error_data и error_type, равным "auth_error"
    ✓ Объект с произвольным error_data, произвольным полем и error_type, равным "client_error"
    ✓ Объект с произвольным error_data, произвольным полем и error_type, равным "api_error" (1 ms)
    ✓ Объект с произвольным error_data, произвольным полем и error_type, равным "auth_error"

PASS src/__tests__/checkVkAvatarIsDefault.test.ts
  Функция checkVkAvatarIsDefault
    ✓ Правильная ссылка: https://vk.com/images/camera_400.png (1 ms)
    ✓ Правильная ссылка: https://vk.com/images/camera_200.png
    ✓ Правильная ссылка: https://vk.com/images/camera_100.png
    ✓ Правильная ссылка: https://vk.com/images/camera_50.png (1 ms)
    ✓ Имитация ВКшной ссылки, jpg-расширение: https://vk.com/images/camera_400.jpg
    ✓ Имитация ВКшной ссылки, jpg-расширение: https://vk.com/images/camera_200.jpg
    ✓ Имитация ВКшной ссылки, jpg-расширение: https://vk.com/images/camera_100.jpg
    ✓ Имитация ВКшной ссылки, jpg-расширение: https://vk.com/images/camera_50.jpg
    ✓ Случайная строка в поле ссылки. Размер: 400
    ✓ Случайная строка в поле ссылки. Размер: 200
    ✓ Случайная строка в поле ссылки. Размер: 100 (1 ms)
    ✓ Случайная строка в поле ссылки. Размер: 50
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_200.png, размер: 400
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_100.png, размер: 400
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_50.png, размер: 400
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_400.png, размер: 200
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_100.png, размер: 200 (1 ms)
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_50.png, размер: 200
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_400.png, размер: 100
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_200.png, размер: 100
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_50.png, размер: 100
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_400.png, размер: 50
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_200.png, размер: 50
    ✓ Несоответствие размеров в аргументе в поле size и в ссылке. Ссылка: https://vk.com/images/camera_100.png, размер: 50
    ✓ Пустая строка в поле ссылки. Размер: 400
    ✓ Пустая строка в поле ссылки. Размер: 200
    ✓ Пустая строка в поле ссылки. Размер: 100
    ✓ Пустая строка в поле ссылки. Размер: 50 (1 ms)

PASS src/__tests__/shareVkStory.test.ts
  Функция shareVkStory
    ✓ Успешное выполнение, источник картинки — URL (1 ms)
    ✓ Успешное выполнение, источник картинки — BLOB
    ✓ Все параметры, кроме источника картинки, передаются в бридж
    ✓ Отказ пользователя, причина ошибки: "User denied"
    ✓ Отказ пользователя, причина ошибки: "Operation denied by user"
    ✓ Неизвестная ошибка

PASS src/__tests__/checkVkUserDenied.test.ts
  Функция checkVkUserDenied
    ✓ Объект ошибки, соответствующий типу ошибки api_error (1 ms)
    ✓ Объект ошибки, соответствующий типу ошибки api_error, но с error_reason "User denied" и кодом ошибки 4
    ✓ Объект ошибки, соответствующий типу ошибки api_error, но с error_reason "Operation denied by user" и кодом ошибки 4 (1 ms)
    ✓ Объект ошибки, соответствующий типу ошибки auth_error
    ✓ Объект ошибки, соответствующий типу ошибки auth_error, но с error_reason "User denied" и кодом ошибки 4
    ✓ Объект ошибки, соответствующий типу ошибки auth_error, но с error_reason "Operation denied by user" и кодом ошибки 4
    ✓ Объект ошибки, соответствующий типу ошибки client_error с правильным error_reason "User denied" и кодом ошибки 4
    ✓ Объект ошибки, соответствующий типу ошибки client_error с правильным error_reason "Operation denied by user" и кодом ошибки 4
    ✓ Объект ошибки, соответствующий типу ошибки client_error с произвольным кодом ошибки, с правильным error_reason "User denied", но в нижнем регистре
    ✓ Объект ошибки, соответствующий типу ошибки client_error с произвольным кодом ошибки, с правильным error_reason "Operation denied by user", но в нижнем регистре
    ✓ Объект ошибки, соответствующий типу ошибки client_error, с произвольным кодом ошибки, с правильным error_reason "User denied"
    ✓ Объект ошибки, соответствующий типу ошибки client_error, с произвольным кодом ошибки, с правильным error_reason "Operation denied by user"
    ✓ Объект ошибки, соответствующий типу ошибки client_error с кодом ошибки 4, с произвольной причиной ошибки
    ✓ Объект ошибки, соответствующий типу ошибки client_error с произвольным кодом ошибки, с произвольной причиной ошибки
    ✓ Объект, содержащий минимально достаточные поля, с типом ошибки client_error с причиной ошибки "User denied" и кодом ошибки 4 (1 ms)
    ✓ Объект, содержащий минимально достаточные поля, с типом ошибки client_error с причиной ошибки "Operation denied by user" и кодом ошибки 4

Test Suites: 11 passed, 11 total
Tests:       1 todo, 252 passed, 253 total
Snapshots:   0 total
Time:        1.359 s
Ran all test suites.
